/* eslint-disable @typescript-eslint/no-explicit-any */
// This file is auto-generated by @hey-api/openapi-ts

import type {
  GetAuthUserResponse,
  GetTagByIdResponse,
  GetTagsListResponse,
  GetTaskByIdResponse,
  GetTasksListResponse,
  LoginUserResponse,
  RegisterUserResponse,
  StoreTagResponse,
  StoreTaskResponse,
  UpdateTagResponse,
  UpdateTaskResponse,
} from "./types.gen";

const userSchemaResponseTransformer = (data: any) => {
  data.email_verified_at = new Date(data.email_verified_at);
  data.created_at = new Date(data.created_at);
  data.updated_at = new Date(data.updated_at);
  return data;
};

export const registerUserResponseTransformer = async (
  data: any
): Promise<RegisterUserResponse> => {
  if (data.data) {
    data.data = userSchemaResponseTransformer(data.data);
  }
  return data;
};

export const loginUserResponseTransformer = async (
  data: any
): Promise<LoginUserResponse> => {
  if (data.data) {
    if (data.data.user) {
      data.data.user = userSchemaResponseTransformer(data.data.user);
    }
  }
  return data;
};

export const getAuthUserResponseTransformer = async (
  data: any
): Promise<GetAuthUserResponse> => {
  if (data.data) {
    data.data = userSchemaResponseTransformer(data.data);
  }
  return data;
};

const tagSchemaResponseTransformer = (data: any) => {
  if (data.created_at) {
    data.created_at = new Date(data.created_at);
  }
  if (data.updated_at) {
    data.updated_at = new Date(data.updated_at);
  }
  return data;
};

export const getTagsListResponseTransformer = async (
  data: any
): Promise<GetTagsListResponse> => {
  if (data.data) {
    data.data = data.data.map((item: any) => {
      return tagSchemaResponseTransformer(item);
    });
  }
  return data;
};

export const storeTagResponseTransformer = async (
  data: any
): Promise<StoreTagResponse> => {
  if (data.data) {
    data.data = tagSchemaResponseTransformer(data.data);
  }
  return data;
};

export const getTagByIdResponseTransformer = async (
  data: any
): Promise<GetTagByIdResponse> => {
  if (data.data) {
    data.data = tagSchemaResponseTransformer(data.data);
  }
  return data;
};

export const updateTagResponseTransformer = async (
  data: any
): Promise<UpdateTagResponse> => {
  if (data.data) {
    data.data = tagSchemaResponseTransformer(data.data);
  }
  return data;
};

const taskSchemaResponseTransformer = (data: any) => {
  if (data.due_date) {
    data.due_date = new Date(data.due_date);
  }
  if (data.created_at) {
    data.created_at = new Date(data.created_at);
  }
  if (data.updated_at) {
    data.updated_at = new Date(data.updated_at);
  }
  if (data.tags) {
    data.tags = data.tags.map((item: any) => {
      return tagSchemaResponseTransformer(item);
    });
  }
  return data;
};

export const getTasksListResponseTransformer = async (
  data: any
): Promise<GetTasksListResponse> => {
  if (data.data) {
    data.data = data.data.map((item: any) => {
      return taskSchemaResponseTransformer(item);
    });
  }
  return data;
};

export const storeTaskResponseTransformer = async (
  data: any
): Promise<StoreTaskResponse> => {
  if (data.data) {
    data.data = taskSchemaResponseTransformer(data.data);
  }
  return data;
};

export const getTaskByIdResponseTransformer = async (
  data: any
): Promise<GetTaskByIdResponse> => {
  if (data.data) {
    data.data = taskSchemaResponseTransformer(data.data);
  }
  return data;
};

export const updateTaskResponseTransformer = async (
  data: any
): Promise<UpdateTaskResponse> => {
  if (data.data) {
    data.data = taskSchemaResponseTransformer(data.data);
  }
  return data;
};
